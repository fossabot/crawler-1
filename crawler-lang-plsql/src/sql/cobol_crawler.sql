CREATE TABLE CRAWLER.SEQUENCE (
  SEQ_NAME VARCHAR(200),
  SEQ_COUNT  INTEGER,
  PRIMARY KEY (SEQ_NAME)
);

UPDATE CRAWLER.SEQUENCE SET SEQ_COUNT = 0 WHERE SEQ_NAME in ('VI_COBOL_CRAWLER_TRIGGER', 'VI_COBOL_FILE', 'VI_COBOL_FILE_CODE_METRICS');

-- ********************** Tables for Crawler of Cobol file ********************
DROP table CRAWLER.VI_COBOL_FILE_REFERENCE;
DROP table CRAWLER.VI_COBOL_FILE_CODE_METRICS;
DROP table CRAWLER.VI_COBOL_FILE;
--DROP table CRAWLER.VI_COBOL_CRAWLER_TRIGGER;

CREATE TABLE CRAWLER.VI_COBOL_CRAWLER_TRIGGER (
  ID INTEGER NOT NULL,
  TRIGGER_NAME VARCHAR(20) NOT NULL,
  DESCRIPTION VARCHAR(50) NOT NULL,
  PATH VARCHAR(200) NOT NULL, -- absolute path
  STATUS VARCHAR(20) NOT NULL, -- NOT STARTED, COMPLETE, IN PROGRESS
  PROCESSING_TIME INTEGER,
  CREATED_BY VARCHAR(50) NOT NULL,
  CREATED_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  UPDATED_BY VARCHAR(50),
  UPDATED_TS TIMESTAMP,
  PRIMARY KEY (ID)
);
ALTER TABLE CRAWLER.VI_COBOL_CRAWLER_TRIGGER ADD CONSTRAINT VI_COBOL_CRAWLER_TRIGGER_UK1 UNIQUE (TRIGGER_NAME);

CREATE TABLE CRAWLER.VI_COBOL_FILE (
  ID INTEGER NOT NULL,
  NAME VARCHAR(100) NOT NULL,
  PATH VARCHAR(200) NOT NULL, -- relative path
  DIGEST VARCHAR(32) NOT NULL,
  TRIGGER_ID INTEGER NOT NULL,
  PRIMARY KEY (ID)
);
ALTER TABLE CRAWLER.VI_COBOL_FILE ADD CONSTRAINT VI_COBOL_FILE_FK1 FOREIGN KEY (TRIGGER_ID)  REFERENCES CRAWLER.VI_COBOL_CRAWLER_TRIGGER(ID);

CREATE TABLE CRAWLER.VI_COBOL_FILE_CODE_METRICS (
  ID INTEGER NOT NULL,
  CF_ID INTEGER NOT NULL,
  LOC_ACTIVE INTEGER NOT NULL,
  LOC_COMMENT INTEGER NOT NULL,
  LOC_OTHER INTEGER,
  DESCRIPTION CLOB,
  TRIGGER_ID INTEGER NOT NULL,
  PRIMARY KEY (ID)
);
ALTER TABLE CRAWLER.VI_COBOL_FILE_CODE_METRICS ADD CONSTRAINT VI_COBOL_FILE_CODE_METRICS_FK1 FOREIGN KEY (TRIGGER_ID)  REFERENCES CRAWLER.VI_COBOL_CRAWLER_TRIGGER(ID);
ALTER TABLE CRAWLER.VI_COBOL_FILE_CODE_METRICS ADD CONSTRAINT VI_COBOL_FILE_CODE_METRICS_FK2 FOREIGN KEY (CF_ID)  REFERENCES CRAWLER.VI_COBOL_FILE(ID);

CREATE TABLE CRAWLER.VI_COBOL_FILE_REFERENCE (
  ID INTEGER NOT NULL,
  CF_ID INTEGER NOT NULL,
  REFERENCE_ITEM_NAME VARCHAR(70) NOT NULL,
  REFERENCE_ITEM_TYPE VARCHAR(30) NOT NULL, --COBOL file, table select, table delete, table update, table insert, procedure call, etc.
  TRIGGER_ID INTEGER NOT NULL,
  PRIMARY KEY (ID)
);

ALTER TABLE CRAWLER.VI_COBOL_FILE_REFERENCE ADD CONSTRAINT VI_COBOL_FILE_REFERENCE_FK1 FOREIGN KEY (TRIGGER_ID)  REFERENCES CRAWLER.VI_COBOL_CRAWLER_TRIGGER(ID);
ALTER TABLE CRAWLER.VI_COBOL_FILE_REFERENCE ADD CONSTRAINT VI_COBOL_FILE_REFERENCE_FK2 FOREIGN KEY (CF_ID)  REFERENCES CRAWLER.VI_COBOL_FILE(ID);
--************************ Tables for Crawler of database tables ****************************
